#!/bin/bash
 
# Author: Timothy Pham
# Date: 02-13-2023
# Version: 1.0
#
# This script takes a list of mentee from a poll and formats it so it's easier 
# to copy and paste into a spreadsheet. It's easier that typing out or copying
# and pasting form the Slack channel and then modifying it by hand. 

# Grab the first argument to determine if we're compiling the list of 
# generating the files with the lists of name for each category

ARG=$1
#echo "${ARG}"

# Colorization
RED='\033[0;31m'
GREEN='\033[0;32m'
NOCOLOR='\033[0m'

if [[ "${ARG}" = "init" ]]
then
    # Generate list of files for each category
    touch soc.txt pentest.txt forensics.txt sec_research.txt threat_intel.txt \
      dfir.txt devopsec.txt threat_hunt.txt grc.txt vuln_manage.txt \
      sec_vendor.txt appsec.txt training.txt

    echo -e "${GREEN}Files generated! Please copy and paste the list of names 
      for each category into the text files.${NOCOLOR}"
    
    exit 0

elif [[ "${ARG}" = "run" ]]
then
    # 1) Copy all the text files into one master list.
    { 
      cat appsec.txt
      cat devopsec.txt
      cat dfir.txt
      cat forensics.txt
      cat grc.txt
      cat pentest.txt
      cat sec_research.txt
      cat sec_vendor.txt
      cat soc.txt
      cat threat_hunt.txt
      cat threat_intel.txt
      cat training.txt
      cat vuln_manage.txt
    } > list.txt
    # 2) Remove the blank lines created when we combined the files
    # 3) Remove the @ symbols from the beginning of the names
    # 4) Remove the variations of (Mentee) from the names
    # 5) Remove stray symbols and the blank line it leaves behind
    # 6) Remove the duplicates
    < list.txt awk NF\
      | sed 's/@//g'\
      | sed 's/-(Mentee)//g' | sed 's/(Mentee)//g' | sed 's/(Mentee)//g'\
      | sed 's/(mentee)//g' | sed 's/(Mentee\/Mentor)//g'\
      | sed 's/(Cyversity, Mentee)//g' | sed 's/-mentee//g'\
      | sed 's/- Mentee//g'\
      | sed 's/,//g' | awk NF\
      | awk '!seen[$0]++'\
      > compiled_names.txt 
       
    # Determining trends and producing output
    # Check total number of respondents
    RESPONDENTS=$(wc -l compiled_names.txt | sed 's/ compiled_names.txt//g')

    # Question 1: What percentage of people are interested in getting into
    # 1 area? 3 areas? More than 5 areas?
    < list.txt awk NF\
      | sed 's/@//g'\
      | sed 's/-(Mentee)//g' | sed 's/(Mentee)//g' | sed 's/(Mentee)//g'\
      | sed 's/(mentee)//g' | sed 's/(Mentee\/Mentor)//g'\
      | sed 's/(Cyversity, Mentee)//g' | sed 's/-mentee//g'\
      | sed 's/- Mentee//g'\
      | sed 's/,//g' | awk NF\
      | sort | uniq -c | sort -n\
      > trends_freq_per_person.txt
    NUMERATOR=$(awk '$1<=1{c++} END {print c+0}' trends_freq_per_person.txt)
    echo "${NUMERATOR} of ${RESPONDENTS} people said they interested in 1 areas"
    
    NUMERATOR=$(awk '$1<=3{c++} END {print c+0}' trends_freq_per_person.txt)
    echo "${NUMERATOR} of ${RESPONDENTS} people said they interested in 3 or less areas"
    
    NUMERATOR=$(awk '$1>=5{c++} END {print c+0}' trends_freq_per_person.txt)
    echo "${NUMERATOR} of ${RESPONDENTS} people said they interested in more than 5"

elif [[ -z "${ARG}" ]]
then
    echo -e "${RED}An error occurred!${NOCOLOR} Please use the arguement of 
      'init' to generate lists or 'run' to compile information"
    exit 1
else
   exit 1
fi
